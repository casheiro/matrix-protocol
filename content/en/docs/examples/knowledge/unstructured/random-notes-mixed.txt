MISCELLANEOUS NOTES - Payments Squad
(John's personal file - not official)

=== PENDING BUG FIXES ===
- stripe webhook sometimes arrives 2x (implement idempotency)
- EUR currency conversion buggy (use different API?)
- paypal timeout too high (configure 30s)
- logs don't have user IP (compliance requested)

=== FEATURE IDEAS ===  
- split payment (split bill between friends)
- save payment method (save customer card)
- recurring payments (monthly subscription)  
- buy now pay later (installments without interest)

💡 REMEMBER: test these ideas with Maria in next planning

=== PERFORMANCE ISSUES ===
Gateway slow lately:
- Stripe: average 8s (used to be 3s)  
- PayPal: average 5s (OK)
- Client timeout: 15s (too low?)

Slow database queries:
- SELECT * FROM payments WHERE created_at > X (no index!)
- Sales report takes 45s (Pedro made cache)
- Connection pool sometimes exhausted (increase from 20 to 50?)

=== TECH DEBT ===
- Spring Boot 2.4 → 3.1 (breaking changes, careful)
- Java 11 → 17 (LTS)  
- Vulnerable dependencies (mvn dependency:check)
- Multi-stage Dockerfile (reduce image size)
- Circuit breaker (hystrix discontinued, use resilience4j)

=== MONITORING ===
Important metrics:
- Gateway p95 latency
- Error rate per endpoint  
- Database connection pool usage
- App memory/CPU
- Monthly chargeback rate

Configure alerts:
- Latency > 10s → Slack #alerts  
- Error rate > 5% → PagerDuty
- Gateway down → SMS on-call team
- Database slow query → email DBA

=== COMPLIANCE MEETING (03/15) ===
Roberto said:
- PCI audit in April (prepare documentation)
- Card data access logs mandatory
- TLS 1.3 minimum encryption
- Passwords can't be default (obvious!)
- 7 year log backup (regulation)

Action items:
- John: review code, remove hardcoded passwords
- Pedro: implement audit log
- Carlos: configure TLS 1.3
- Ana: document processes
- Maria: PCI training for everyone

=== CUSTOMER FEEDBACK ===
Common complaints:
- "Payment takes too long" (performance)
- "Error at checkout" (timeout?)  
- "Discount didn't apply" (known bug)
- "Refund takes 7 days" (policy, not bug)

Customer suggestions:
- Venmo as payment method (high priority!)
- Apple Pay / Google Pay
- Split payment
- Save card for next purchase

=== PERSONAL TODO ===
- [x] Implement webhook retry ✓
- [x] Fix CVV validation ✓  
- [ ] Document refund API
- [ ] Create load tests
- [ ] Study fraud machine learning
- [ ] Review microservices architecture

=== IMPORTANT NUMBERS ===
Monthly volume: ~50k transactions
Average ticket: $125
Conversion rate: 78% (benchmark: 80%)
Chargeback rate: 0.8% (acceptable < 1%)
Refund rate: 3.2% (benchmark: 2-5%)

Per gateway:
- Stripe: 60% volume, 2.1s average latency
- PayPal: 40% volume, 1.8s average latency

=== SECRETS & CONFIGS ===
⚠️ DON'T COMMIT THIS!

Stripe:
- pk_live_51H... (production public key)  
- sk_live_51H... (production secret key)
- whsec_1... (webhook secret)

PayPal:  
- Client ID: ATz... (production)
- Client Secret: EL6... (production)

Database:
- Host: payments-db.prod.internal
- User: app_user
- Password: P@ssw0rd123! (change this!)

=== USEFUL COMMANDS ===

Start local:
./mvnw spring-boot:run -Dspring.profiles.active=local

Run tests:  
./mvnw test -Dtest=PaymentServiceTest

Deploy staging:
kubectl apply -f k8s/staging/

Check logs:
kubectl logs -f payments-api-pod

Database backup:
pg_dump payments_prod > backup_$(date +%Y%m%d).sql

Redis flush cache:
redis-cli FLUSHDB

=== BOOKMARKED LINKS ===
- Stripe docs: https://stripe.com/docs/api
- PayPal docs: https://developer.paypal.com/docs/api/overview/  
- Spring Boot: https://docs.spring.io/spring-boot/docs/current/reference/
- PCI Standards: https://www.pcisecuritystandards.org/
- Postman collection: shared link in team

=== RANDOM THOUGHTS ===
- Current architecture is monolith, but works
- Microservices would be overkill now (only 5 people team)
- Event sourcing interesting for auditing
- CQRS maybe for heavy reports
- GraphQL? Nah, REST works fine

Team is good, but could have more seniors.
Lucas is junior but learns fast.
Roberta (QA) joined recently, but seems good.

Biggest problem: accumulated tech debt.
Pedro leaving was complicated (lots of tacit knowledge).

Next 6 months focus:
1. Stability & performance  
2. Compliance & security
3. Venmo integration
4. Code quality

=== USEFUL CONTACTS ===
- Stripe: sarah.johnson@stripe.com (AM)
- PayPal: support ticket system  
- AWS: enterprise support
- PCI: roberto.santos@company.com (compliance)
- Legal: legal@company.com

---
LAST UPDATE: 03/20/2024 11:47 PM 
(personal notes, don't share with other teams)
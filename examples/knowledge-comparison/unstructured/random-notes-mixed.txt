ANOTA√á√ïES DIVERSAS - Squad Pagamentos
(arquivo pessoal do Jo√£o - n√£o oficial)

=== BUG FIXES PENDING ===
- webhook stripe √†s vezes chega 2x (implementar idempotency)
- currency conversion EUR bugada (usar API diferente?)
- timeout paypal muito alto (configurar 30s)
- logs n√£o t√™m IP do usu√°rio (compliance pediu)

=== IDEIAS FEATURES ===  
- split payment (dividir conta entre amigos)
- save payment method (guardar cart√£o cliente)
- recurring payments (assinatura mensal)  
- buy now pay later (parcelar sem juros)

üí° LEMBRAR: testar essas ideias com Maria na pr√≥xima planning

=== PERFORMANCE ISSUES ===
Gateway lento ultimamente:
- Stripe: m√©dia 8s (antes era 3s)  
- PayPal: m√©dia 5s (OK)
- Timeout cliente: 15s (muito baixo?)

Database queries lentas:
- SELECT * FROM payments WHERE created_at > X (sem √≠ndice!)
- Relat√≥rio vendas demora 45s (Pedro fez cache)
- Connection pool √†s vezes esgota (aumentar de 20 para 50?)

=== TECH DEBT ===
- Spring Boot 2.4 ‚Üí 3.1 (breaking changes, cuidado)
- Java 11 ‚Üí 17 (LTS)  
- Dependencies vulner√°veis (mvn dependency:check)
- Dockerfile multi-stage (reduzir imagem)
- Circuit breaker (hystrix descontinuado, usar resilience4j)

=== MONITORING ===
M√©tricas importantes:
- Latency p95 gateways
- Error rate por endpoint  
- Database connection pool usage
- Memory/CPU app
- Chargeback rate mensal

Alertas configurar:
- Latency > 10s ‚Üí Slack #alerts  
- Error rate > 5% ‚Üí PagerDuty
- Gateway down ‚Üí SMS time plant√£o
- Database slow query ‚Üí email DBA

=== REUNI√ÉO COM COMPLIANCE (15/03) ===
Roberto falou:
- PCI audit em abril (preparar documenta√ß√£o)
- Logs de acesso dados cart√£o obrigat√≥rio
- Criptografia TLS 1.3 m√≠nimo
- Senhas n√£o podem ser padr√£o (√≥bvio!)
- Backup logs 7 anos (regulamenta√ß√£o)

Action items:
- Jo√£o: revisar c√≥digo, remover hardcoded passwords
- Pedro: implementar audit log
- Carlos: configurar TLS 1.3
- Ana: documentar processos
- Maria: treinamento PCI para todos

=== CUSTOMER FEEDBACK ===
Reclama√ß√µes comuns:
- "Pagamento demora muito" (performance)
- "Erro na finaliza√ß√£o" (timeout?)  
- "Desconto n√£o aplicou" (bug conhecido)
- "Refund demora 7 dias" (pol√≠tica, n√£o bug)

Sugest√µes clientes:
- PIX como meio pagamento (prioridade alta!)
- Apple Pay / Google Pay
- Split payment
- Salvar cart√£o pr√≥xima compra

=== TODO PESSOAL ===
- [x] Implementar retry webhook ‚úì
- [x] Corrigir CVV validation ‚úì  
- [ ] Documentar API refund
- [ ] Criar testes carga
- [ ] Estudar machine learning fraude
- [ ] Revisar arquitetura microservi√ßos

=== N√öMEROS IMPORTANTES ===
Volume mensal: ~50k transa√ß√µes
Ticket m√©dio: R$ 125
Conversion rate: 78% (benchmark: 80%)
Chargeback rate: 0.8% (aceit√°vel < 1%)
Refund rate: 3.2% (benchmark: 2-5%)

Por gateway:
- Stripe: 60% volume, 2.1s lat√™ncia m√©dia
- PayPal: 40% volume, 1.8s lat√™ncia m√©dia

=== SECRETS & CONFIGS ===
‚ö†Ô∏è N√ÉO COMMITAR ISSO!

Stripe:
- pk_live_51H... (production public key)  
- sk_live_51H... (production secret key)
- whsec_1... (webhook secret)

PayPal:  
- Client ID: ATz... (production)
- Client Secret: EL6... (production)

Database:
- Host: payments-db.prod.internal
- User: app_user
- Password: P@ssw0rd123! (trocar isso!)

=== USEFUL COMMANDS ===

Start local:
./mvnw spring-boot:run -Dspring.profiles.active=local

Run tests:  
./mvnw test -Dtest=PaymentServiceTest

Deploy staging:
kubectl apply -f k8s/staging/

Check logs:
kubectl logs -f payments-api-pod

Database backup:
pg_dump payments_prod > backup_$(date +%Y%m%d).sql

Redis flush cache:
redis-cli FLUSHDB

=== LINKS BOOKMARK ===
- Stripe docs: https://stripe.com/docs/api
- PayPal docs: https://developer.paypal.com/docs/api/overview/  
- Spring Boot: https://docs.spring.io/spring-boot/docs/current/reference/
- PCI Standards: https://www.pcisecuritystandards.org/
- Postman collection: shared link no team

=== RANDOM THOUGHTS ===
- Arquitetura atual √© monolito, mas funciona
- Microservi√ßos seria overkill agora (s√≥ 5 pessoas time)
- Event sourcing interessante para auditoria
- CQRS talvez para relat√≥rios pesados
- GraphQL? Nah, REST funciona bem

Time √© bom, mas poderia ter mais s√™niors.
Lucas √© junior mas aprende r√°pido.
Roberta (QA) chegou h√° pouco, mas parece boa.

Maior problema: tech debt acumulado.
Pedro saindo foi complicado (muito knowledge t√°cito).

Pr√≥ximos 6 meses focar:
1. Stability & performance  
2. Compliance & security
3. PIX integration
4. Code quality

=== CONTATOS √öTEIS ===
- Stripe: sarah.johnson@stripe.com (AM)
- PayPal: support ticket system  
- AWS: enterprise support
- PCI: roberto.santos@company.com (compliance)
- Legal: juridico@company.com

---
√öLTIMA ATUALIZA√á√ÉO: 20/03/2024 23:47 
(anota√ß√µes pessoais, n√£o compartilhar com outros times)
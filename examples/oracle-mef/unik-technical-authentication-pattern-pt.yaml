id: unik-technical-authentication-pattern
title: Padrão de Implementação de Autenticação JWT
domain: technical
type: pattern
context: implementation
version: "1.0.0"
created_date: "2024-08-12"
last_modified: "2024-08-12"
intent_of_use:
  - validate_implementation
  - generate_code
  - standardize_process
  - ensure_security
use_case_stage:
  - implementation
  - peer_review
  - testing
  - documentation
language: pt_BR
content: |
  Padrão de implementação padronizado para autenticação JWT (JSON Web Token) em aplicações web.
  
  Este padrão garante autenticação segura e stateless com gerenciamento e validação adequados de tokens.
  
  ## Componentes Principais
  
  1. **Geração de Token**: Criar tokens JWT assinados após login bem-sucedido
  2. **Validação de Token**: Verificar assinatura e expiração do token em cada requisição
  3. **Mecanismo de Refresh**: Implementar renovação de token para manter sessões
  4. **Armazenamento Seguro**: Armazenar tokens de forma segura no lado cliente
  
  ## Fluxo de Implementação
  
  ```mermaid
  sequenceDiagram
      Cliente->>Serviço Auth: Requisição de Login
      Serviço Auth->>Database: Validar Credenciais
      Database-->>Serviço Auth: Usuário Válido
      Serviço Auth->>Serviço Auth: Gerar JWT
      Serviço Auth-->>Cliente: Retornar Token JWT
      Cliente->>API: Requisição com Header JWT
      API->>API: Validar JWT
      API-->>Cliente: Recurso Protegido
  ```
  
  ## Considerações de Segurança
  
  - Usar algoritmos de assinatura robustos (RS256 recomendado)
  - Definir tempos de expiração apropriados (15-30 minutos para access tokens)
  - Implementar rotação de refresh tokens
  - Validar token em todo endpoint protegido
  - Nunca armazenar dados sensíveis no payload do token
  
  ## Tratamento de Erros
  
  - 401 Unauthorized: Token inválido ou expirado
  - 403 Forbidden: Token válido mas permissões insuficientes
  - Fornecer mensagens de erro claras para debugging
examples:
  - input: "Usuário faz login com credenciais válidas"
    output: "Sistema gera token JWT com claims do usuário e expiração de 30 minutos"
  - input: "Cliente envia requisição com token JWT expirado"
    output: "API retorna 401 Unauthorized com instrução de refresh de token"
  - input: "Assinatura de token inválida detectada"
    output: "Sistema registra evento de segurança e retorna 401 Unauthorized"
related_to:
  - target: unik-technical-api-security-standards
    relation_type: complies_with
    description: Segue padrões de segurança para APIs
  - target: unik-technical-session-management
    relation_type: relates_to
    description: Complementa estratégias de gerenciamento de sessão
  - target: unik-business-user-authentication-policy
    relation_type: implements
    description: Implementa política organizacional de autenticação
governance:
  criticality: critical
  auto_propagation: semi_automatic
  validation_frequency: 30
  impact_analysis:
    structural_changes: breaking
    dependent_ukis: 8
    propagation_scope: immediate
  propagation_rules:
    on_major_change: validate_dependencies
    on_minor_change: suggest_updates
    on_patch_change: auto_propagate
last_validation: "2024-08-12"